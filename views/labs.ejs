<html>
  <head>
    <title><%= __('Gardenly – Find Soil Testing Labs') %></title>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin />
    <link
      rel="stylesheet"
      as="style"
      onload="this.rel='stylesheet'"
      href="https://fonts.googleapis.com/css2?display=swap&family=Manrope:wght@400;500;700;800&family=Noto+Sans:wght@400;500;700;900"
    />
    <link rel="icon" type="image/x-icon" href="data:image/x-icon;base64," />
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
      #map {
        width: 100%;
        height: 400px;
        border-radius: 1rem;
        margin-bottom: 1.5rem;
      }
      .lab-item {
        background: #fff;
        border: 1px solid #e5e7eb;
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 0.5rem;
      }
      .lab-item h4 {
        margin: 0 0 0.25rem 0;
        color: #4e9750;
        font-weight: 700;
        cursor: pointer;
      }
      .lab-item p {
        margin: 0.25rem 0;
        font-size: 0.95rem;
      }
      .lab-item button {
        margin-top: 0.5rem;
        background: #4e9750;
        color: #fff;
        border: none;
        padding: 0.4rem 1rem;
        border-radius: 0.375rem;
        font-size: 0.95rem;
        cursor: pointer;
      }
      .lab-item button:hover {
        background: #357b39;
      }
    </style>
  </head>
  <body> 
    <div class="relative flex min-h-screen flex-col bg-[#f8fcf8] font-sans">
      <div class="layout-container flex h-full grow flex-col">
        <!-- Header -->
        <header class="flex items-center justify-between border-b border-[#e7f3e8] px-10 py-3">
          <div class="flex items-center gap-8">
            <div class="flex items-center gap-4 text-[#0e1b0e]">
              <a href="/">
                <div class="size-4">
                  <svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M24 4H42V17.3333V30.6667H24V44H6V30.6667V17.3333H24V4Z" fill="currentColor"></path>
                  </svg>
                </div>
              </a>
              <h2 class="text-[#0e1b0e] text-lg font-bold">Krishi Sakhi</h2>
            </div>
            <div class="flex items-center gap-9">
              <a class="text-[#0e1b0e] text-sm font-medium" href="#"><%= __('Plants') %></a>
              <a class="text-[#0e1b0e] text-sm font-medium" href="#"><%= __('Gardens') %></a>
            </div>
          </div>
        </header>

        <!-- Main Content -->
        <div class="px-8 md:px-40 flex flex-1 justify-center py-5">
          <div class="layout-content-container flex flex-col max-w-[960px] flex-1">
            <div class="flex flex-wrap justify-between gap-3 p-4">
              <p class="text-[#0e1b0e] text-4xl font-black leading-tight tracking-[-0.033em] min-w-72">
                <%= __('Find a soil testing lab near you') %>
              </p>
            </div>

            <!-- Map and Search -->
            <div class="px-4 py-3">
              <div class="flex flex-col md:flex-row gap-2 items-center mb-4">
                <input id="addressInput" type="text" placeholder="<%= __('Enter city or address') %>" class="form-input flex-1 rounded-xl bg-[#e7f3e8] text-[#0e1b0e] px-4 py-2" />
                <button onclick="searchAddress()" class="rounded-full bg-[#4e9750] text-white px-4 py-2 font-bold"><%= __('Search') %></button>
                <button onclick="useCurrentLocation()" class="rounded-full bg-[#e7f3e8] text-[#0e1b0e] px-4 py-2 font-bold"><%= __('Use my location') %></button>
                <button onclick="findLabs()" class="rounded-full bg-[#e7f3e8] text-[#0e1b0e] px-4 py-2 font-bold"><%= __('Find Soil Labs') %></button>
              </div>
              <div id="map"></div>
            </div>

            <!-- Results Section -->
            <h3 class="text-[#0e1b0e] text-lg font-bold px-4 pb-2 pt-4"><%= __('Nearby Soil Testing Labs') %></h3>
            <div id="labList" class="px-4 pb-8"><%= __('No soil testing labs found yet.') %></div>
          </div>
        </div>
      </div>
    </div>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
      let map = L.map('map').setView([20.5937, 78.9629], 5); // Default India
      let lastLocation = null;
      let labMarkers = [];

      // Known soil testing labs in India (can be expanded)
      const knownSoilLabs = [
        {
          name: "District Soil Survey & Soil Testing Laboratory",
          address: "Krishi Bhawan, New Delhi",
          phone: "011-23382354",
          lat: 28.6176,
          lng: 77.2090
        },
        {
          name: "Soil Testing Laboratory - IARI",
          address: "Indian Agricultural Research Institute, Pusa, New Delhi",
          phone: "011-25841672",
          lat: 28.6358,
          lng: 77.1665
        },
        {
          name: "State Soil Testing Laboratory",
          address: "Department of Agriculture, Bangalore, Karnataka",
          phone: "080-23411234",
          lat: 12.9716,
          lng: 77.5946
        },
        {
          name: "Soil Testing Laboratory - PAU",
          address: "Punjab Agricultural University, Ludhiana",
          phone: "0161-2401960",
          lat: 30.9010,
          lng: 75.8573
        }
      ];

      // Add tile layer
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
      }).addTo(map);

      // Geolocation
      function useCurrentLocation() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(pos => {
            const lat = pos.coords.latitude;
            const lng = pos.coords.longitude;
            lastLocation = { lat, lng };

            map.setView([lat, lng], 15);
            L.marker([lat, lng]).addTo(map)
              .bindPopup("You are here").openPopup();
          });
        } else {
          alert("Geolocation is not supported by this browser.");
        }
      }

      // Search address
      function searchAddress() {
        const address = document.getElementById("addressInput").value;
        if (!address) return alert("Please enter an address.");

        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`)
          .then(res => res.json())
          .then(data => {
            if (data.length > 0) {
              const place = data[0];
              const lat = parseFloat(place.lat);
              const lon = parseFloat(place.lon);
              lastLocation = { lat, lng: lon };

              map.setView([lat, lon], 15);
              L.marker([lat, lon]).addTo(map)
                .bindPopup(place.display_name).openPopup();
            } else {
              alert("Location not found.");
            }
          });
      }

      // Haversine formula
      function getDistance(lat1, lon1, lat2, lon2) {
        const R = 6371;
        const dLat = (lat2 - lat1) * Math.PI / 180;
        const dLon = (lon2 - lon1) * Math.PI / 180;
        const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                  Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                  Math.sin(dLon / 2) * Math.sin(dLon / 2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        return (R * c).toFixed(2); // km
      }

      // Find soil testing labs
      function findLabs() {
        if (!lastLocation) return alert("Get or search a location first.");

        const { lat, lng } = lastLocation;
        const query = `
          [out:json];
          (
            node["amenity"="laboratory"]["laboratory"="soil"](around:5000,${lat},${lng});
            way["amenity"="laboratory"]["laboratory"="soil"](around:5000,${lat},${lng});
            relation["amenity"="laboratory"]["laboratory"="soil"](around:5000,${lat},${lng});
            
            node["amenity"="laboratory"]["laboratory"="agricultural"](around:5000,${lat},${lng});
            way["amenity"="laboratory"]["laboratory"="agricultural"](around:5000,${lat},${lng});
            relation["amenity"="laboratory"]["laboratory"="agricultural"](around:5000,${lat},${lng});
            
            node["office"="government"]["government"="agricultural"](around:5000,${lat},${lng});
            way["office"="government"]["government"="agricultural"](around:5000,${lat},${lng});
            relation["office"="government"]["government"="agricultural"](around:5000,${lat},${lng});
          );
          out center;
        `;

        fetch("https://overpass-api.de/api/interpreter", {
          method: "POST",
          body: query
        })
        .then(res => res.json())
        .then(data => {
          const listDiv = document.getElementById("labList");
          listDiv.innerHTML = "";

          labMarkers.forEach(m => map.removeLayer(m));
          labMarkers = [];

          // Combine found labs with known labs
          const allLabs = [...data.elements];
          
          // Add known labs that are within 100km of current location
          knownSoilLabs.forEach(lab => {
            const distance = getDistance(lat, lng, lab.lat, lab.lng);
            if (distance < 100) { // Within 100km
              allLabs.push({
                tags: {
                  name: lab.name,
                  "addr:full": lab.address,
                  phone: lab.phone
                },
                lat: lab.lat,
                lon: lab.lng,
                isKnownLab: true
              });
            }
          });

          if (allLabs.length === 0) {
            listDiv.innerHTML = `
              <p>No soil testing labs found nearby. Here are some government soil testing facilities that might help:</p>
              <div class="lab-item mt-4">
                <h4>District Soil Survey & Soil Testing Laboratory</h4>
                <p><strong>Address:</strong> Krishi Bhawan, New Delhi</p>
                <p><strong>Phone:</strong> 011-23382354</p>
                <p>Contact your local agriculture department for soil testing services.</p>
              </div>
            `;
            return;
          }

          // Sort by distance
          allLabs.sort((a, b) => {
            const distA = getDistance(lat, lng, a.lat || a.center?.lat, a.lon || a.center?.lon);
            const distB = getDistance(lat, lng, b.lat || b.center?.lat, b.lon || b.center?.lon);
            return distA - distB;
          });

          allLabs.forEach((el, index) => {
            const lat2 = el.lat || el.center?.lat;
            const lon2 = el.lon || el.center?.lon;
            const name = el.tags?.name || "Unnamed Soil Lab";
            const address = el.tags?.["addr:full"] || el.tags?.["addr:street"] || "No address available";
            const phone = el.tags?.phone || el.tags?.["contact:phone"] || "Phone not available";
            const website = el.tags?.website || el.tags?.["contact:website"] || "";
            const dist = getDistance(lat, lng, lat2, lon2);
            const isKnownLab = el.isKnownLab || false;

            const marker = L.marker([lat2, lon2], {
              icon: isKnownLab ? 
                L.divIcon({className: 'known-lab-icon', html: '⭐', iconSize: [24, 24]}) : 
                null
            }).addTo(map).bindPopup(name);
            labMarkers.push(marker);

            const item = document.createElement("div");
            item.className = "lab-item";
            if (isKnownLab) {
              item.style.borderLeft = "4px solid #4e9750";
            }

            item.innerHTML = `
              ${isKnownLab ? '<div class="text-xs text-[#4e9750] font-bold mb-1">Government Facility</div>' : ''}
              <h4 onclick="zoomTo(${lat2}, ${lon2})">${index + 1}. ${name}</h4>
              <p><strong>Distance:</strong> ${dist} km</p>
              <p><strong>Address:</strong> ${address}</p>
              <p><strong>Phone:</strong> ${phone}</p>
              ${website ? `<p><strong>Website:</strong> <a href="${website.startsWith('http') ? website : 'http://'+website}" target="_blank">${website}</a></p>` : ''}
              <button onclick="window.open('https://www.google.com/maps/dir/?api=1&destination=${lat2},${lon2}', '_blank')">Get Directions</button>
            `;

            listDiv.appendChild(item);
          });
        })
        .catch(err => {
          console.error(err);
          // Fallback to known labs if API fails
          const listDiv = document.getElementById("labList");
          listDiv.innerHTML = `
            <p>Could not load soil testing labs. Here are some government facilities that might help:</p>
            ${knownSoilLabs.map((lab, index) => `
              <div class="lab-item mt-4" style="border-left: 4px solid #4e9750;">
                <div class="text-xs text-[#4e9750] font-bold mb-1">Government Facility</div>
                <h4 onclick="zoomTo(${lab.lat}, ${lab.lng})">${index + 1}. ${lab.name}</h4>
                <p><strong>Address:</strong> ${lab.address}</p>
                <p><strong>Phone:</strong> ${lab.phone}</p>
                <button onclick="window.open('https://www.google.com/maps/dir/?api=1&destination=${lab.lat},${lab.lng}', '_blank')">Get Directions</button>
              </div>
            `).join('')}
          `;
        });
      }

      // Zoom to lab
      window.zoomTo = function(lat, lon) {
        map.setView([lat, lon], 17);
      }
    </script>
  </body>
</html>